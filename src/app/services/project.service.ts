import { Injectable } from '@angular/core';
import { Observable, of } from 'rxjs';
import { Project } from '../interfaces/project.interface';

@Injectable({
  providedIn: 'root'
})
export class ProjectService {
  // Dados mockados para demonstraÃ§Ã£o
  private projects: Project[] = [
    {
      id: '1',
      name: 'M42Hub - Plataforma de ColaboraÃ§Ã£o',
      summary: 'Uma plataforma inovadora para colaboraÃ§Ã£o em projetos de programaÃ§Ã£o',
      description: `# M42Hub - Plataforma de ColaboraÃ§Ã£o

## Sobre o Projeto

O M42Hub Ã© uma plataforma revolucionÃ¡ria que conecta desenvolvedores, designers e profissionais de tecnologia para colaborar em projetos inovadores. Nossa missÃ£o Ã© democratizar o acesso a oportunidades de desenvolvimento e criar uma comunidade vibrante de makers.

## Funcionalidades Principais

### ðŸš€ GestÃ£o de Projetos
- CriaÃ§Ã£o e gerenciamento de projetos colaborativos
- Sistema de tags para categorizaÃ§Ã£o inteligente
- Timeline e milestones para acompanhamento de progresso

### ðŸ‘¥ GestÃ£o de Equipes
- FormaÃ§Ã£o de equipes multidisciplinares
- Sistema de roles e responsabilidades
- ComunicaÃ§Ã£o integrada entre membros

### ðŸ“Š Analytics e Insights
- MÃ©tricas de performance do projeto
- RelatÃ³rios de produtividade da equipe
- Dashboards personalizados

## Tecnologias Utilizadas

- **Frontend**: Angular 17, PrimeNG, TypeScript
- **Backend**: Node.js, Express, TypeScript
- **Banco de Dados**: PostgreSQL
- **AutenticaÃ§Ã£o**: JWT, OAuth2
- **Deploy**: Docker, AWS

## Arquitetura

O projeto segue uma arquitetura modular e escalÃ¡vel:

\`\`\`typescript
// Exemplo de estrutura de mÃ³dulos
src/
â”œâ”€â”€ app/
â”‚   â”œâ”€â”€ components/
â”‚   â”œâ”€â”€ pages/
â”‚   â”œâ”€â”€ services/
â”‚   â””â”€â”€ interfaces/
â”œâ”€â”€ shared/
â””â”€â”€ assets/
\`\`\`

## Roadmap

### Fase 1 - MVP âœ…
- [x] Sistema de autenticaÃ§Ã£o
- [x] CRUD de projetos
- [x] GestÃ£o bÃ¡sica de equipes

### Fase 2 - ColaboraÃ§Ã£o ðŸš§
- [ ] Sistema de chat em tempo real
- [ ] Compartilhamento de arquivos
- [ ] NotificaÃ§Ãµes push

### Fase 3 - Analytics ðŸ“ˆ
- [ ] Dashboards avanÃ§ados
- [ ] RelatÃ³rios customizÃ¡veis
- [ ] IntegraÃ§Ã£o com ferramentas externas

## Como Contribuir

1. **Fork** o repositÃ³rio
2. Crie uma **branch** para sua feature
3. FaÃ§a **commit** das suas mudanÃ§as
4. Abra um **Pull Request**

## Equipe

Nossa equipe Ã© composta por profissionais apaixonados por tecnologia e inovaÃ§Ã£o. Cada membro traz experiÃªncias Ãºnicas e contribui para o sucesso do projeto.

## Contato

Para mais informaÃ§Ãµes sobre o projeto, entre em contato conosco atravÃ©s dos canais oficiais da M42Hub.`,
      team: [
        {
          id: '1',
          name: 'JoÃ£o Silva',
          photo: '/default_avatar.png',
          role: 'Tech Lead',
          isManager: true
        },
        {
          id: '2',
          name: 'Maria Santos',
          photo: '/default_avatar.png',
          role: 'Frontend Developer'
        },
        {
          id: '3',
          name: 'Pedro Costa',
          photo: '/default_avatar.png',
          role: 'Backend Developer'
        },
        {
          id: '4',
          name: 'Ana Oliveira',
          photo: '/default_avatar.png',
          role: 'UX/UI Designer'
        }
      ],
      tags: [
        { id: '1', name: 'Angular', type: 'assunto', color: '#dd0031' },
        { id: '2', name: 'TypeScript', type: 'assunto', color: '#3178c6' },
        { id: '3', name: 'Node.js', type: 'assunto', color: '#339933' },
        { id: '4', name: 'IntermediÃ¡rio', type: 'dificuldade', color: '#ffa726' },
        { id: '5', name: '3-6 meses', type: 'tempoEstimado', color: '#42a5f5' }
      ],
      status: 'active',
      createdAt: new Date('2024-01-15'),
      updatedAt: new Date('2024-03-20'),
      startDate: new Date('2024-02-01'),
      expectedDate: new Date('2024-08-01'),
      unfilledRoles: ['DevOps Engineer', 'QA Tester']
    }
  ];

  constructor() { }

  getProjectById(id: string): Observable<Project | undefined> {
    const project = this.projects.find(p => p.id === id);
    return of(project);
  }

  getAllProjects(): Observable<Project[]> {
    return of(this.projects);
  }
}
